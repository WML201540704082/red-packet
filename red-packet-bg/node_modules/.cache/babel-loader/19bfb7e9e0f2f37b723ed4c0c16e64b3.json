{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"/Users/superskysxh/Desktop/red-packet-background/red-packet-bg/src/components/header/index.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport menuList from '../../config/menuConfig';\nimport { formateDate } from '../../utils/dateUtils';\nimport memoryUtils from '../../utils/memoryUtils';\nimport storageUtils from '../../utils/storageUtils';\nimport './index.less';\nimport LinkButton from '../link-button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentTime: formateDate(Date.now()) // 当前时间字符串\n\n    };\n\n    this.getTime = () => {\n      // 每隔1s获取当前时间，并更新状态数据currentTime\n      this.intervalId = setInterval(() => {\n        const currentTime = formateDate(Date.now());\n        this.setState({\n          currentTime\n        });\n      }, 1000);\n    };\n\n    this.getTitle = () => {\n      // 得到当前请求路径\n      const path = this.props.location.pathname;\n      let title;\n      menuList.forEach(item => {\n        if (item.key === path) {\n          // 如果当前item对象的key与payh一样，item的title就是需要显示的title\n          title = item.title;\n        } else if (item.children) {\n          // 在所有子item中查找匹配\n          const cItem = item.children.find(cItem => cItem.key === path); // 如果有值才说明有匹配的\n\n          if (cItem) {\n            // 取出它的title\n            title = cItem.title;\n          }\n        }\n      });\n      return title;\n    };\n\n    this.Loginout = () => {\n      // 显示确认狂\n      _Modal.confirm({\n        title: '确定退出吗?',\n        icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this),\n        onOk: () => {\n          // 删除保存的user数据\n          storageUtils.removeUser();\n          memoryUtils.user = {}; // 跳转到Login\n\n          this.props.history.replace('/login');\n        },\n\n        onCancel() {\n          console.log('Cancel');\n        }\n\n      });\n    };\n  }\n\n  /*\n   第一次render()之后执行一次\n   一般在此执行异步操作：发ajax请求/启动定时器\n  */\n  componentDidMount() {\n    // 获取当前的时间\n    this.getTime();\n  }\n  /*\n  // 不能这么做:不会更新显示\n  componentWillMount() {\n      this.title = this.getTitle()\n  } \n  */\n\n  /*\n   当前组件写在之前调用 \n  */\n\n\n  componentWillUnmount() {\n    // 清除定时器\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    const {\n      currentTime\n    } = this.state;\n    const username = memoryUtils.user.userName; // 得到当前需要显示的title\n\n    const title = this.getTitle();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u6B22\\u8FCE\\uFF0C\", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n          onClick: this.Loginout,\n          children: \"\\u9000\\u51FA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-bottom-left\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-bottom-right\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/superskysxh/Desktop/red-packet-background/red-packet-bg/src/components/header/index.jsx"],"names":["React","Component","withRouter","ExclamationCircleOutlined","menuList","formateDate","memoryUtils","storageUtils","LinkButton","Header","state","currentTime","Date","now","getTime","intervalId","setInterval","setState","getTitle","path","props","location","pathname","title","forEach","item","key","children","cItem","find","Loginout","confirm","icon","onOk","removeUser","user","history","replace","onCancel","console","log","componentDidMount","componentWillUnmount","clearInterval","render","username","userName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,yBAAT,QAA0C,mBAA1C;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,gBAAvB;;;AAEA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE3BS,KAF2B,GAEnB;AACJC,MAAAA,WAAW,EAAEN,WAAW,CAACO,IAAI,CAACC,GAAL,EAAD,CADpB,CACkC;;AADlC,KAFmB;;AAAA,SAM3BC,OAN2B,GAMjB,MAAM;AACZ;AACA,WAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAChC,cAAML,WAAW,GAAGN,WAAW,CAACO,IAAI,CAACC,GAAL,EAAD,CAA/B;AACA,aAAKI,QAAL,CAAc;AAACN,UAAAA;AAAD,SAAd;AACH,OAH4B,EAG1B,IAH0B,CAA7B;AAIH,KAZ0B;;AAAA,SAc3BO,QAd2B,GAchB,MAAM;AACb;AACA,YAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAAjC;AACA,UAAIC,KAAJ;AACAnB,MAAAA,QAAQ,CAACoB,OAAT,CAAiBC,IAAI,IAAI;AACrB,YAAIA,IAAI,CAACC,GAAL,KAAaP,IAAjB,EAAuB;AAAE;AACrBI,UAAAA,KAAK,GAAGE,IAAI,CAACF,KAAb;AACH,SAFD,MAEO,IAAIE,IAAI,CAACE,QAAT,EAAmB;AACtB;AACA,gBAAMC,KAAK,GAAGH,IAAI,CAACE,QAAL,CAAcE,IAAd,CAAmBD,KAAK,IAAIA,KAAK,CAACF,GAAN,KAAcP,IAA1C,CAAd,CAFsB,CAGtB;;AACA,cAAIS,KAAJ,EAAW;AACP;AACAL,YAAAA,KAAK,GAAGK,KAAK,CAACL,KAAd;AACH;AACJ;AACJ,OAZD;AAaA,aAAOA,KAAP;AACH,KAhC0B;;AAAA,SAqC3BO,QArC2B,GAqChB,MAAM;AACb;AACA,aAAMC,OAAN,CAAc;AACVR,QAAAA,KAAK,EAAE,QADG;AAEVS,QAAAA,IAAI,eAAE,QAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,gBAFI;AAGVC,QAAAA,IAAI,EAAE,MAAM;AACR;AACA1B,UAAAA,YAAY,CAAC2B,UAAb;AACA5B,UAAAA,WAAW,CAAC6B,IAAZ,GAAmB,EAAnB,CAHQ,CAIR;;AACA,eAAKf,KAAL,CAAWgB,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACH,SATS;;AAUVC,QAAAA,QAAQ,GAAG;AACTC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;;AAZS,OAAd;AAcH,KArD0B;AAAA;;AAuD3B;AACJ;AACA;AACA;AACIC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAK3B,OAAL;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;;;AACI4B,EAAAA,oBAAoB,GAAG;AACnB;AACAC,IAAAA,aAAa,CAAC,KAAK5B,UAAN,CAAb;AACH;;AAED6B,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACjC,MAAAA;AAAD,QAAgB,KAAKD,KAA3B;AAEA,UAAMmC,QAAQ,GAAGvC,WAAW,CAAC6B,IAAZ,CAAiBW,QAAlC,CAJK,CAML;;AACA,UAAMvB,KAAK,GAAG,KAAKL,QAAL,EAAd;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,2CAAU2B,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,KAAKf,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAAqCP;AAArC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,iCACI;AAAA,sBAAOZ;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAzG0B;;AA4G/B,oBAAeT,UAAU,CAACO,MAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Modal } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\n\nimport menuList from '../../config/menuConfig'\nimport { formateDate } from '../../utils/dateUtils'\nimport memoryUtils from '../../utils/memoryUtils'\nimport storageUtils from '../../utils/storageUtils'\nimport './index.less'\nimport LinkButton from '../link-button'\n\nclass Header extends Component {\n\n    state = {\n        currentTime: formateDate(Date.now()), // 当前时间字符串\n    }\n\n    getTime = () => {\n        // 每隔1s获取当前时间，并更新状态数据currentTime\n        this.intervalId = setInterval(() => {\n            const currentTime = formateDate(Date.now())\n            this.setState({currentTime})\n        }, 1000);\n    }\n\n    getTitle = () => {\n        // 得到当前请求路径\n        const path = this.props.location.pathname\n        let title\n        menuList.forEach(item => {\n            if (item.key === path) { // 如果当前item对象的key与payh一样，item的title就是需要显示的title\n                title = item.title\n            } else if (item.children) {\n                // 在所有子item中查找匹配\n                const cItem = item.children.find(cItem => cItem.key === path)\n                // 如果有值才说明有匹配的\n                if (cItem) {\n                    // 取出它的title\n                    title = cItem.title\n                }\n            }\n        })\n        return title\n    }\n\n    /*\n    退出登录\n    */\n    Loginout = () => {\n        // 显示确认狂\n        Modal.confirm({\n            title: '确定退出吗?',\n            icon: <ExclamationCircleOutlined />,\n            onOk: () => {\n                // 删除保存的user数据\n                storageUtils.removeUser()\n                memoryUtils.user = {}\n                // 跳转到Login\n                this.props.history.replace('/login')\n            },\n            onCancel() {\n              console.log('Cancel');\n            },\n        })\n    }\n\n    /*\n     第一次render()之后执行一次\n     一般在此执行异步操作：发ajax请求/启动定时器\n    */\n    componentDidMount() {\n        // 获取当前的时间\n        this.getTime()\n    }\n\n    /*\n    // 不能这么做:不会更新显示\n    componentWillMount() {\n        this.title = this.getTitle()\n    } \n    */\n\n    /*\n     当前组件写在之前调用 \n    */\n    componentWillUnmount() {\n        // 清除定时器\n        clearInterval(this.intervalId)\n    }\n\n    render() {\n\n        const {currentTime} = this.state\n\n        const username = memoryUtils.user.userName\n\n        // 得到当前需要显示的title\n        const title = this.getTitle()\n\n        return (\n            <div className=\"header\">\n                <div className=\"header-top\">\n                    <span>欢迎，{username}</span>\n                    {/* <span style={{cursor:'pointer'}} onClick={this.Loginout}>退出</span> */}\n                    <LinkButton onClick={this.Loginout}>退出</LinkButton>\n                </div>\n                <div className=\"header-bottom\">\n                    <div className=\"header-bottom-left\">{title}</div>\n                    <div className=\"header-bottom-right\">\n                        <span>{currentTime}</span>\n                        {/* <img src=\"http://api.map.baidu.com/images/weather/day/qing.png\" alt=\"weather\" />\n                        <span>晴</span> */}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Header)"]},"metadata":{},"sourceType":"module"}