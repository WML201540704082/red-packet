{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/superskysxh/Desktop/red-packet-background-1/red-packet-bg/src/pages/login/login.jsx\";\nimport React, { Component } from 'react';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './login.less';\nimport logo from '../../assets/images/logo.png';\nimport { reqLogin } from '../../api';\nimport memoryUtils from '../../utils/memoryUtils';\nimport storageUtils from '../../utils/storageUtils';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.validatorPwd = (rule, value, callback) => {\n      if (!value) {\n        callback('请输入密码');\n      } else if (value.length < 4) {\n        callback('密码长度不能小于4位');\n      } else if (value.length > 12) {\n        callback('密码长度不能大于12位');\n      } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n        callback('密码必 须是英文、数字或下划线组成');\n      } else {\n        callback(); // 验证通过\n      }\n    };\n  }\n\n  render() {\n    // 如果用户已经登陆，自动跳转到管理洁面\n    const user = memoryUtils.user;\n\n    if (user && user.id) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this);\n    } // async 和 await 以同步编码(没有回调函数了)方式实现异步流程\n\n\n    const onFinish = async values => {\n      // console.log('Received values of form: ', values);\n      const {\n        username,\n        password\n      } = values; // reqLogin(username, password).then(response => {\n      //     console.log('成功了',response.data)\n      // }).catch(error => {\n      //     console.log('失败了', error);\n      // })\n\n      try {\n        const result = await reqLogin(username, password);\n\n        if (result.code === 200) {\n          _message.success('登陆成功'); // 保存user\n\n\n          const user = result.data;\n          memoryUtils.user = user; //保存在内存中\n\n          storageUtils.saveUser(user); // 跳转到管理页面(不需要会退到登陆用replace，需要会退到登陆用push)\n\n          this.props.history.push('/');\n        } else {\n          _message.error(result.message);\n        }\n      } catch (error) {\n        console.log('失败了', error);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"login-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u7EA2\\u5305\\u62BD\\u5956\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"login-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u7528\\u6237\\u767B\\u5F55\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form, {\n          name: \"normal_login\",\n          className: \"login-form\",\n          initialValues: {\n            remember: true\n          },\n          onFinish: onFinish,\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"username\" // 生命式验证：直接使用别人定义好的验证规则进行验证\n            ,\n            rules: [{\n              required: true,\n              whitespace: true,\n              message: '用户名必须输入!'\n            }, {\n              min: 4,\n              message: '用户名最少4位'\n            }, {\n              max: 12,\n              message: '用户名最多12位'\n            }, {\n              pattern: /^[a-zA-Z0-9_]+$/,\n              message: '用户名必须是英文、数字或下划线组成'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 41\n              }, this),\n              placeholder: \"\\u7528\\u6237\\u540D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"password\",\n            rules: [{\n              validator: this.validatorPwd\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this),\n              type: \"password\",\n              placeholder: \"\\u5BC6\\u7801\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"login-form-button\",\n              children: \"\\u767B\\u5F55\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/superskysxh/Desktop/red-packet-background-1/red-packet-bg/src/pages/login/login.jsx"],"names":["React","Component","UserOutlined","LockOutlined","logo","reqLogin","memoryUtils","storageUtils","Redirect","Login","validatorPwd","rule","value","callback","length","test","render","user","id","onFinish","values","username","password","result","code","success","data","saveUser","props","history","push","error","message","console","log","remember","required","whitespace","min","max","pattern","validator"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { Form, Input, Button, message } from 'antd'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport './login.less'\nimport logo from '../../assets/images/logo.png'\nimport { reqLogin } from '../../api'\nimport memoryUtils from '../../utils/memoryUtils'\nimport storageUtils from '../../utils/storageUtils'\nimport { Redirect } from 'react-router-dom'\n\nexport default class Login extends Component {\n    // 对密码进行自定义验证\n    validatorPwd = (rule, value, callback) => {\n        if (!value) {\n            callback('请输入密码')\n        } else if (value.length < 4) {\n            callback('密码长度不能小于4位')\n        } else if (value.length > 12) {\n            callback('密码长度不能大于12位')\n        } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n            callback('密码必 须是英文、数字或下划线组成')\n        } else {\n            callback() // 验证通过\n        }\n    }\n    render () {\n        // 如果用户已经登陆，自动跳转到管理洁面\n        const user = memoryUtils.user\n        if (user && user.id) {\n            return <Redirect to='/'/>\n        }\n\n        // async 和 await 以同步编码(没有回调函数了)方式实现异步流程\n        const onFinish = async (values) => {\n            // console.log('Received values of form: ', values);\n            const { username, password } = values\n            // reqLogin(username, password).then(response => {\n            //     console.log('成功了',response.data)\n            // }).catch(error => {\n            //     console.log('失败了', error);\n            // })\n            try {\n                const result = await reqLogin(username, password)\n                if (result.code === 200) {\n                    message.success('登陆成功')\n\n                    // 保存user\n                    const user = result.data\n                    memoryUtils.user = user //保存在内存中\n                    storageUtils.saveUser(user)\n\n                    // 跳转到管理页面(不需要会退到登陆用replace，需要会退到登陆用push)\n                    this.props.history.push('/')\n                } else {\n                    message.error(result.message)\n                }\n            } catch (error) {\n                console.log('失败了', error);\n            }\n        };\n        return (\n            <div className=\"login\">\n                <header className=\"login-header\">\n                    <img src={logo} alt=\"logo\" />\n                    <h1>红包抽奖后台管理系统</h1>\n                </header>\n                <section className=\"login-content\">\n                    <h2>用户登录</h2>\n                    <Form\n                        name=\"normal_login\"\n                        className=\"login-form\"\n                        initialValues={{\n                            remember: true,\n                        }}\n                        onFinish={onFinish}\n                        >\n                        <Form.Item\n                            name=\"username\"\n                            // 生命式验证：直接使用别人定义好的验证规则进行验证\n                            rules={[\n                                {   required: true, whitespace: true,  message: '用户名必须输入!'   },\n                                {   min: 4,  message: '用户名最少4位'   },\n                                {   max: 12,  message: '用户名最多12位'   },\n                                {   pattern: /^[a-zA-Z0-9_]+$/,  message: '用户名必须是英文、数字或下划线组成'   },\n                            ]}\n                        >\n                            <Input \n                                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                                placeholder=\"用户名\"\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                {\n                                    validator: this.validatorPwd\n                                }\n                            ]}\n                        >\n                            <Input\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                type=\"password\"\n                                placeholder=\"密码\"\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                登录\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </section>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}